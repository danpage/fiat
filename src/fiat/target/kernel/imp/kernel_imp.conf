// Copyright (C) 2024 Daniel Page <dan@phoo.org>
//
// Use of this source code is restricted per the MIT license, a copy of which 
// can be found via https://opensource.org/license/mit (and which is included 
// as LICENSE.txt within the associated archive or repository).

// ============================================================================

/** Special-purpose register 0x02 is a buffer, whose purpose is to
  * hold any externally supplied randomness:
  * if the kernel requires some randomness but there is no on-board suport
  * for generating it, the register supports a compromise approach whereby
  * the client supplies it as input.
  * We define the 
  * allocated size 
  * of said register using PARAM_RND.
  */

#define PARAM_RND ( 0 )

// ----------------------------------------------------------------------------

/** It is possible to define kernel-specific registers,
  * which add to the set of default definitions.
  * The syntax for doing so is
  *
  * DECLARE_SPR(<id>, <allocated size>, <allocated value>, <type fields>)
  * DECLARE_GPR(<id>, <allocated size>, <allocated value>, <type fields>)
  *
  * for a special- or general-purpose register respectively.  For example,
  * the following defines a starting point where
  * 
  * - general-purpose register 0x00 or r has
  *   - RO access control,
  *   - fixed-length of 16 bytes,
  *   - no initial content,
  * - general-purpose register 0x01 or x has
  *   - WO access control,
  *   - fixed-length of 16 bytes,
  *   - no initial content,
  * 
  * allowing the kernel to model a generic function of the form r = f( x ).
  */

DECLARE_GPR(r, 16, {}, .wr = false, .rd =  true, .length = KERNEL_REG_LENGTH_FIX)
DECLARE_GPR(x, 16, {}, .wr = true,  .rd = false, .length = KERNEL_REG_LENGTH_FIX)

// ----------------------------------------------------------------------------

/** It is possible to define kernel-specific  commands,
  * which add to the set of default definitions.
  * The syntax for doing so is
  *
  * DECLARE_CMD(<id>, <function>)
  */

// ----------------------------------------------------------------------------

/** It is possible to define kernel-specific     files,
  * which add to the set of default definitions.
  * The syntax for doing so is
  *
  * INCLUDE(<filename>)
  *
  * assuming an absolute path specifies the file; any environment variables
  * are expanded, so, e.g., one can use ${REPO_HOME} as an anchor.
  */

// ============================================================================
