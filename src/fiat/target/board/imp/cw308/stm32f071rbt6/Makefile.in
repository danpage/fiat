# Copyright (C) 2024 Daniel Page <dan@phoo.org>
#
# Use of this source code is restricted per the MIT license, a copy of which 
# can be found via https://opensource.org/license/mit (and which is included 
# as LICENSE.txt within the associated archive or repository).

# =============================================================================

INCLUDES   += ${DEPS}/chipwhisperer/firmware/mcu/hal
INCLUDES   += ${DEPS}/chipwhisperer/firmware/mcu/hal/stm32f0
INCLUDES   += ${DEPS}/chipwhisperer/firmware/mcu/hal/stm32f0/CMSIS
INCLUDES   += ${DEPS}/chipwhisperer/firmware/mcu/hal/stm32f0/CMSIS/core
INCLUDES   += ${DEPS}/chipwhisperer/firmware/mcu/hal/stm32f0/CMSIS/device
INCLUDES   += ${DEPS}/chipwhisperer/firmware/mcu/hal/stm32f0/Legacy

 SOURCES   += ${DEPS}/chipwhisperer/firmware/mcu/hal/stm32f0/stm32f0_startup.S
 SOURCES   += ${DEPS}/chipwhisperer/firmware/mcu/hal/stm32f0/stm32f0_hal.c 
 SOURCES   += ${DEPS}/chipwhisperer/firmware/mcu/hal/stm32f0/stm32f0_hal_lowlevel.c 

 TARGETS   += ${REPO_HOME}/build/target/${BOARD}/target.elf 
 TARGETS   += ${REPO_HOME}/build/target/${BOARD}/target.bin 
 TARGETS   += ${REPO_HOME}/build/target/${BOARD}/target.hex

GCC_PREFIX  = arm-none-eabi-

# 1.  option-related => class 1: architecture
GCC_FLAGS  += -mcpu="cortex-m0" -mthumb -mfloat-abi="soft"
# 1.  option-related => class 2: compiler
GCC_FLAGS  += -Os -Wall -std="gnu11" -ffreestanding -funsigned-char -funsigned-bitfields -fshort-enums -fvisibility="hidden" -ffunction-sections
# 1.  option-related => class 3:   linker
GCC_FLAGS  += -T ${DEPS}/chipwhisperer/firmware/mcu/hal/stm32f0/LinkerScript.ld --specs="nano.specs" --specs="nosys.specs" 
# 1.  option-related => class 4: configuration (of HAL, BSP, etc.)
GCC_FLAGS  += -DPLATFORM="CW308_STM32F0" -DHAL_TYPE="HAL_stm32f0" -DSS_VER="1" -DSTM32 -DSTM32F0 -DSTM32F071xB -DSTM32F071RBTX -DF_CPU="7372800UL"
# 2.    path-related
GCC_PATHS  +=
# 3. library-related
GCC_LIBS   += -lm 

# -----------------------------------------------------------------------------

fetch-deps :
	@git clone https://github.com/newaetech/chipwhisperer.git ${DEPS}/chipwhisperer
	@git -C ${DEPS}/chipwhisperer checkout d38eae52080fab801624e905046a5ee042da560f
	@git -C ${DEPS}/chipwhisperer submodule update --init --recursive

patch-deps :

build-deps :

clean-deps : 
	@rm --force --recursive ${DEPS}

# -----------------------------------------------------------------------------

${REPO_HOME}/build/target/${BOARD}/%.o : %.c
	@${GCC_PREFIX}gcc $(patsubst %, -I %, ${INCLUDES}) ${GCC_PATHS} ${GCC_FLAGS} -c -o ${@} ${<} 2>&1 | tee ${REPO_HOME}/build/target/${BOARD}/${*}.log
${REPO_HOME}/build/target/${BOARD}/%.o : %.s
	@${GCC_PREFIX}gcc $(patsubst %, -I %, ${INCLUDES}) ${GCC_PATHS} ${GCC_FLAGS} -c -o ${@} ${<} 2>&1 | tee ${REPO_HOME}/build/target/${BOARD}/${*}.log
${REPO_HOME}/build/target/${BOARD}/%.o : %.S
	@${GCC_PREFIX}gcc $(patsubst %, -I %, ${INCLUDES}) ${GCC_PATHS} ${GCC_FLAGS} -c -o ${@} ${<} 2>&1 | tee ${REPO_HOME}/build/target/${BOARD}/${*}.log

${REPO_HOME}/build/target/${BOARD}/%.elf ${REPO_HOME}/build/target/${BOARD}/%.map : ${OBJECTS}
	@${GCC_PREFIX}gcc $(patsubst %, -I %, ${INCLUDES}) ${GCC_PATHS} ${GCC_FLAGS} -Wl,-Map="${REPO_HOME}/build/target/${BOARD}/${*}.map" -o ${REPO_HOME}/build/target/${BOARD}/${*}.elf ${^} ${GCC_LIBS}
${REPO_HOME}/build/target/${BOARD}/%.bin                                          : ${REPO_HOME}/build/target/${BOARD}/%.elf
	@${GCC_PREFIX}objcopy ${OBJCOPY_FLAGS} --output-target="binary" ${<} ${@}
${REPO_HOME}/build/target/${BOARD}/%.hex                                          : ${REPO_HOME}/build/target/${BOARD}/%.elf
	@${GCC_PREFIX}objcopy ${OBJCOPY_FLAGS} --output-target="ihex"   ${<} ${@}

# -----------------------------------------------------------------------------

program-jlink :
	@${REPO_HOME}/src/fiat/target/board/imp/${BOARD}/script/program-jlink.sh $(filter %.hex, ${TARGETS})

# =============================================================================
